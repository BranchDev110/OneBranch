import {
  createUserWithEmailAndPassword,
  signInWithEmailAndPassword,
} from "firebase/auth";

import { auth } from "@/firebase/BaseConfig";
import { baseApi } from "./base";

import { AuthBody } from "@/types/auth.types";

const authApi = baseApi.injectEndpoints({
  endpoints: (build) => ({
    login: build.mutation<any, AuthBody>({
      queryFn: async ({ email, password }) => {
        try {
          const result = await signInWithEmailAndPassword(
            auth,
            email,
            password
          );
          return { data: result };
        } catch (e) {
          return { error: e };
        }
      },
    }),
    signUp: build.mutation<any, AuthBody>({
      queryFn: async ({ email, password }) => {
        try {
          const result = await createUserWithEmailAndPassword(
            auth,
            email,
            password
          );

          return { data: result };
        } catch (e) {
          return { error: e };
        }
      },
    }),
  }),
});
export const { useLoginMutation, useSignUpMutation } = authApi;
export { authApi };
